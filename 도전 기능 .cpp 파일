// Fill out your copyright notice in the Description page of Project Settings.
#include "MyActor.h"
#include <cmath>

// Sets default values
AMyActor::AMyActor()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

	start = FVector2D(0.0f, 0.0f);
	evCnt = 0;
	totDist = 0;

}

// Called when the game starts or when spawned
void AMyActor::BeginPlay()
{

	Super::BeginPlay();
	UE_LOG(LogTemp, Log, TEXT("Start = X : %f, Y : %f"), start.X, start.Y);
	move();
	UE_LOG(LogTemp, Log, TEXT("Total Distance is : %d, EventCount is : %d"), totDist, evCnt);
}

// Called every frame
void AMyActor::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

}

void AMyActor::move()
{
	
	for (int32 i = 0; i < 10; i++) {

		int32 DeltaX = step();
		int32 DeltaY = step();

		int32 probability = FMath::RandRange(0, 100);

		if (probability <= 50) {
			if (DeltaX < 2 && DeltaY < 2) {

				start.X += DeltaX;
				start.Y += DeltaY;

				UE_LOG(LogTemp, Warning, TEXT("Move %f,%f"), start.X, start.Y);
				UE_LOG(LogTemp, Warning, TEXT("Distance : %f"), distance(DeltaX, DeltaY));

				totDist += distance(DeltaX, DeltaY);
				evCnt++;

			}
			else {

				UE_LOG(LogTemp, Warning, TEXT("increase 2 over"));

			}
		}
		else {

			UE_LOG(LogTemp, Warning, TEXT("you are unlucky"));

		}
	}

}

int32 AMyActor::step() 
{

	return FMath::RandRange(0, 2);

}


float AMyActor::distance(int32 first, int32 second) {

	return (float)sqrt(pow(first+second, 2));

}

